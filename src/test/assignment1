<%--
  index.jsp
  User: engineer
  Date: 1/30/21
  Time: 12:01 PM
--%>
<link
  rel="stylesheet"
  href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
  integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
  crossorigin="anonymous"
>
<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<!DOCTYPE html>
<html>
<head>
  <title>CSE 640: Jason Rimer</title>
  <div class="nav nav-tabs navbar-light bg-light">
    <a class="nav-link active" href="index.jsp">Assignment 1: Jason Rimer</a>
    <a class="nav-link" href="Assignment1Problem1InputForm.jsp">Problem 1</a>
    <a class="nav-link" href="Assignment1Problem2InputForm.jsp">Problem 2</a>
    <a class="nav-link" href="Assignment1Problem3.jsp">Problem 3</a>
    <a class="nav-link" href="assignment1.ContextDemoServlet">Problem 4</a>
  </div>
</head>
<body>
<iframe
  class="container-fluid google-doc"
  src="https://docs.google.com/document/d/e/2PACX-1vRjd4Et3t-q71LuL3GigkpN5WaV5Jt5K9okZLxD_Kt2YEf6kEaOMNzt9GYN1-r9eC-FSQWEP_CikFnD/pub?embedded=true"
></iframe>
</body>
<style type="text/css">
    .google-doc {
        height: 100%;
    }
</style>
</html>

<%--
  Assignment 1 Problem 1 Input Form.jsp
  User: engineer
  Date: 1/30/21
  Time: 12:01 PM
--%>
<link
  rel="stylesheet"
  href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
  integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
  crossorigin="anonymous"
>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<html>
<head>
  <title>Input (Assignment 1 Problem 1)</title>
  <div class="nav nav-tabs navbar-light bg-light">
    <a class="nav-link" href="index.jsp">Assignment 1: Jason Rimer</a>
    <a class="nav-link active" href="Assignment1Problem1InputForm.jsp">Problem 1</a>
    <a class="nav-link" href="Assignment1Problem2InputForm.jsp">Problem 2</a>
    <a class="nav-link" href="Assignment1Problem3.jsp">Problem 3</a>
    <a class="nav-link" href="assignment1.ContextDemoServlet">Problem 4</a>
  </div>
</head>
<body>
<div class="container-fluid">
  <h4 class="display-4">Input Form</h4>
  <%
    String textToReverse = request.getParameter("textToReverse");
    if (textToReverse == null) {
  %>
  <form
    action="Assignment1Problem1InputForm.jsp"
    method="GET"
    class="form-group"
  >
    <input
      type="text"
      name="textToReverse"
      placeholder="Enter text..."
      class="form-control-lg"
    />
    <input
      type="submit"
      value="Submit"
      class="form-control-lg btn-primary"
    />
  </form>
  <%
    } else {
      String reversedText = new StringBuilder(textToReverse).reverse().toString();
      String pageUrl = "Assignment1Problem1OutputFor.jsp";
      String requestName1 = "originalText";
      String requestName2 = "reversedText";
      response.sendRedirect(pageUrl + "?"
          + requestName1 + "=" + textToReverse + "&"
          + requestName2 + "=" + reversedText);
    }
  %>
</div>
</body>
</html>

<%--
  Assignment 1 Problem 1 Output For.jsp
  User: engineer
  Date: 1/30/21
  Time: 12:01 PM
--%>
<link
  rel="stylesheet"
  href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
  integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
  crossorigin="anonymous"
>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<html>
<head>
  <title>Output (Assignment 1 Problem 1)</title>
  <div class="nav nav-tabs navbar-light bg-light">
    <a class="nav-link" href="index.jsp">Assignment 1: Jason Rimer</a>
    <a class="nav-link active" href="Assignment1Problem1InputForm.jsp">Problem 1</a>
    <a class="nav-link" href="Assignment1Problem2InputForm.jsp">Problem 2</a>
    <a class="nav-link" href="Assignment1Problem3.jsp">Problem 3</a>
    <a class="nav-link" href="assignment1.ContextDemoServlet">Problem 4</a>
  </div>
</head>
<body>
<div class="container-fluid">
  <h4 class="display-4">Output For</h4>
  <form
    action="Assignment1Problem1InputForm.jsp"
    method="GET"
    class="form-group"
  >
    <input
      type="text"
      name="textToReverse"
      placeholder="Enter text..."
      class="form-control-lg text-muted"
      value="<%=request.getParameter("originalText")%>"
      disabled="disabled"
    />
    <input
      type="submit"
      value="Submit"
      class="form-control-lg btn-disabled"
      disabled="disabled"
    />
    <label
      class="form-control-lg text-success"
    >
      <%=request.getParameter("reversedText")%>
    </label>
  </form>
</div>
</body>
</html>

<%--
  Assignment 1 Problem 2 Input Form.jsp
  User: engineer
  Date: 1/30/21
  Time: 3:06 PM
--%>
<link
  rel="stylesheet"
  href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
  integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
  crossorigin="anonymous"
>
<link rel="stylesheet" type="text/css" href="style.css"/>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<html>
<head>
  <title>Input Form (Assignment 1 Problem 2)</title>
  <div class="nav nav-tabs navbar-light bg-light">
    <a class="nav-link" href="index.jsp">Assignment 1: Jason Rimer</a>
    <a class="nav-link" href="Assignment1Problem1InputForm.jsp">Problem 1</a>
    <a class="nav-link active" href="Assignment1Problem2InputForm.jsp">Problem 2</a>
    <a class="nav-link" href="Assignment1Problem3.jsp">Problem 3</a>
    <a class="nav-link" href="assignment1.ContextDemoServlet">Problem 4</a>
  </div>
</head>
<body>
<div class="container-fluid">
  <h4 class="display-4">Input Form</h4>
  <form
    action="assignment1.Reverser"
    method="GET"
    class="form-group"
  >
    <input
      type="text"
      name="text"
      placeholder="Enter text..."
      class="form-control-lg"
    />
    <input
      type="submit"
      value="Submit"
      class="form-control-lg btn-primary"
    />
  </form>
</div>
</body>
</html>

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

@WebServlet("/assignment1.Reverser")
public class assignment1.Reverser extends HttpServlet {
  protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    String url = "/Assignment1Problem2OutputForm.jsp";
    String originalText = request.getParameter("text");
    String reversedText = new StringBuilder(originalText).reverse().toString();
    ServletContext context = getServletContext();
    request.setAttribute("originalText", originalText);
    request.setAttribute("reversedText", reversedText);
    RequestDispatcher dispatcher = context.getRequestDispatcher(url);
    dispatcher.forward(request, response);
  }
}

<%--
  Assignment 1 Problem 3.jsp
  User: engineer
  Date: 2/3/21
  Time: 10:51 PM
--%>
<link
  rel="stylesheet"
  href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
  integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
  crossorigin="anonymous"
>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<html>
<head>
  <title>Assignment 1 Problem 3</title>
  <div class="nav nav-tabs navbar-light bg-light">
    <a class="nav-link" href="index.jsp">Assignment 1: Jason Rimer</a>
    <a class="nav-link" href="Assignment1Problem1InputForm.jsp">Problem 1</a>
    <a class="nav-link" href="Assignment1Problem2InputForm.jsp">Problem 2</a>
    <a class="nav-link active" href="Assignment1Problem3.jsp">Problem 3</a>
    <a class="nav-link" href="assignment1.ContextDemoServlet">Problem 4</a>
  </div>
</head>
<body>
<h1>Servlet Context</h1>
<div>Servlet Contexts provide global traits to all servlets and will be shared across every instance of the servlet
  class. This contrasts the Servlet Config traits that can be tailored to each individual instance of a servlet. For
  example, a Servlet Context could be used in regional deployments to set the default country and language setting for
  every new servlet (e.g., setting all Amazon.uk servlets to use British Pounds as the default currency).
</div>
</body>
</html>

<%@ page import="java.util.function.Consumer" %>
<%@ page import="java.util.*" %><%--
  Assignment 1 Problem 4.jsp
  User: engineer
  Date: 2/3/21
  Time: 10:51 PM
--%>
<link
  rel="stylesheet"
  href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
  integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
  crossorigin="anonymous"
>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<html>
<head>
  <title>Assignment 1 Problem 4</title>
  <div class="nav nav-tabs navbar-light bg-light">
    <a class="nav-link" href="index.jsp">Assignment 1: Jason Rimer</a>
    <a class="nav-link" href="Assignment1Problem1InputForm.jsp">Problem 1</a>
    <a class="nav-link" href="Assignment1Problem2InputForm.jsp">Problem 2</a>
    <a class="nav-link" href="Assignment1Problem3.jsp">Problem 3</a>
    <a class="nav-link active" href="assignment1.ContextDemoServlet">Problem 4</a>
  </div>
</head>
<body>
<div class="container-fluid">
  <div class="card">
    <div class="card-body">
      <h2 class="card-title">Attributes</h2>
      <table class="table">
        <tr>
          <th scope="col">Name</th>
          <th scope="col">Value</th>
        </tr>

        <%
          LinkedHashMap<String, String> attributes = (LinkedHashMap<String, String>) request.getAttribute("attributes");
          for (Map.Entry<String, String> attribute : attributes.entrySet()) {
        %>
        <tr>
          <td class="text-truncate">
            <%=attribute.getKey()%>
          </td>
          <td class="text-truncate">
            <%=attribute.getValue()%>
          </td>
        </tr>
        <%
          }
        %>
      </table>
    </div>
  </div>
  <div class="card">
    <div class="card-body">
      <h2 class="card-title">Parameters</h2>
      <table class="table">
        <tr>
          <th scope="col">Name</th>
          <th scope="col">Value</th>
        </tr>
        <%
          LinkedHashMap<String, String> parameters = (LinkedHashMap<String, String>) request.getAttribute("parameters");
          for (Map.Entry<String, String> parameter : parameters.entrySet()) {
        %>
        <tr>
          <td>
            <%=parameter.getKey()%>
          </td>
          <td>
            <%=parameter.getValue()%>
          </td>
        </tr>
        <%
          }
        %>
      </table>
    </div>
  </div>
</div>
</div>
</body>
<style type="text/css">
    .table {
        table-layout: fixed;
    }

    .card {
        margin-top: 32px;
        max-width: 40%;
    }

    .container-fluid {
        display: flex;
        flex-direction: row;
        justify-content: space-around;
    }
</style>
</html>

import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.*;

@WebServlet(urlPatterns = "/assignment1.ContextDemoServlet")
public class assignment1.ContextDemoServlet extends HttpServlet {
  ServletConfig servletConfig;
  ServletContext servletContext;

  @Override
  public void init(ServletConfig config) {
    servletConfig = config;
    print(bannerWithMessage("Output from " + config.getServletName()));
  }

  @Override
  protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    servletContext = servletConfig.getServletContext();

    LinkedHashMap<String, String> attributes = extractContext("Attribute", servletContext.getAttributeNames());
    LinkedHashMap<String, String> parameters = extractContext("Parameter", servletContext.getInitParameterNames());

    print(bannerWithMessage("Attributes"));
    print(convertMapToPrintableList("Attributes", attributes));

    print(bannerWithMessage("Parameters"));
    print(convertMapToPrintableList("Parameters", parameters));

    request.setAttribute("attributes", attributes);
    request.setAttribute("parameters", parameters);
    request.getRequestDispatcher("/Assignment1Problem4.jsp").forward(request, response);
  }

  private LinkedHashMap<String, String> extractContext(String type, Enumeration<String> names) {
    LinkedHashMap<String, String> collection = new LinkedHashMap<>();
    while (names.hasMoreElements()) {
      String name = names.nextElement();
      collection.put(name, valueOfAttributeOrParameter(type, this.servletContext, name));
    }
    return collection;
  }

  private String valueOfAttributeOrParameter(String type, ServletContext servletContext, String name) {
    if (type.equals("Attribute")) {
      return servletContext.getAttribute(name).toString();
    } else {
      return servletContext.getInitParameter(name);
    }
  }

  private LinkedList<String> convertMapToPrintableList(String type, LinkedHashMap<String, String> collection) {
    LinkedList<String> printableCollection = new LinkedList<>();
    int itemNumber = 0;
    for (Map.Entry<String, String> item : collection.entrySet()) {
      printableCollection.add(++itemNumber + ". " + type + " name:  " + item.getKey());
      printableCollection.add(itemNumber + ". " + type + " value:  " + item.getValue());
    }
    return printableCollection;
  }

  private String truncate(String value) {
    return value.length() > 60 ? value.substring(0, 57) + "..." : value;
  }

  private LinkedList<String> bannerWithMessage(String message) {
    LinkedList<String> bannerWithMessage = new LinkedList<>();
    String banner = "+++++++++++++++++++++++++++++++++++++++++";
    bannerWithMessage.add(banner);
    bannerWithMessage.add(message);
    bannerWithMessage.add(banner);
    return bannerWithMessage;
  }

  private void print(LinkedList<String> multiLineMessage) {
    for (String line : multiLineMessage) {
      System.out.println(truncate(line));
    }
  }
}
